<?xml version="1.0" encoding="UTF-8"?>
<!--
	EXAMPLE TYPE FILE
-->

<types>
	<container id="ome.model.core.Test">
		<properties>
			<required name="ha" type="ome.model.core.Image" />
		</properties>
	</container>

	<abstract id="ome.model.core.AbstractThing">
		<properties>
			<required name="myBool" type="Boolean" />
			<optional name="maybeAFloat" type="Float" />
		</properties>
	</abstract>

	<type id="ome.model.core.RealThing"
		subclasses="ome.model.core.AbstractThing">
		<properties>
			<onemany name="lotsOfOtherThings"
				type="ome.model.somewhere.ElseHa" inverse="things" />
		</properties>
	</type>

	<type id="ome.model.somewhere.ElseHa" />

	<link id="ome.model.links.RealThingOtherThingMap"
		to="ome.model.core.RealThing" from="ome.model.somewhere.ElseHa" />

	<enum id="ome.model.enums.MyThingType"><!-- enums and *Type are conventions -->
		<properties>
			<entry name="test1" />
		</properties>
	</enum>

	<type id="ome.Pixels">
		<properties>
			<zeromany name="thumbnails" type="ome.Thumbnail"
				inverse="pixels" />
		</properties>
	</type>

	<type id="ome.Thumbnail">
		<properties>
			<required name="pixels" type="ome.Pixels" />
		</properties>
	</type>

	<type id="ome.Job">
		<properties>
			<child name="jobThingLink"
				type="ome.JobThingLink"
				target="ome.Thing" />
			<child name="jobDoohickeyLink"
				type="ome.JobDoohickeyLink"
				target="ome.Doohickey" />
		</properties>
	</type>

	<type id="ome.Thing">
		<properties />
	</type>

	<type id="ome.Doohickey">
		<properties>
			<parent name="dooHickeyLinks"
				type="ome.JobDoohickeyLink"
				target="ome.Job" />
		</properties>
	</type>

	<link id="ome.JobThingLink">
		<properties>
			<from_parent type="ome.Job" />
			<to_child type="ome.Thing" />
		</properties>
	</link>

	<link id="ome.JobDoohickeyLink">
		<properties>
			<from_parent type="ome.Job" />
			<to_child type="ome.Doohickey" />
		</properties>
	</link>

	<type id="pkg.ordertest">
		<properties>
			<required name="pixels" type="Integer" />
			<required name="cccccc" type="Integer" />
			<required name="aaaaaa" type="Integer" />
			<required name="bbbbbb" type="Integer" />
			<required name="images" type="Integer" />
		</properties>
	</type>

    <type id="list.Holder">
        <properties>
            <onemany name="items" type="list.Item" ordered="true" inverse="holder"/>
        </properties>
    </type>
    <type id="list.Item">
        <properties>
            <manyone name="holder" type="list.Holder" ordered="true"/>
        </properties>
    </type>

    <!-- Testing inverse capped -->
    <type id="ic.RenderingDef">
        <properties>
            <onemany name="waveRendering" type="ic.ChannelBinding" inverse="renderingDef" ordered="true"/>
        </properties>
    </type>

    <type id="ic.ChannelBinding">
        <properties>
            <manyone name="renderingDef" type="ic.RenderingDef" ordered="true"/>
        </properties>
    </type>

    <type id="ome.model.annotations.Example" annotated="true"/>
    <abstract id="ome.model.annotations.Annotation" annotated="true">
        <properties>
            <required name="ns" type="Text"/>
        </properties>
    </abstract>
   <type id="ome.model.annotations.BooAnnotation" annotated="true"
         superclass="ome.model.annotations.Annotation">
        <properties>
            <required name="boo" type="Integer"/>
        </properties>
    </type>

    <enum id="ome.model.enums.FrequencyMultiplication">
        <entry name="x1"/>
        <entry name="x2"/>
        <entry name="x3"/>
        <entry name="x4"/>
    </enum>

        <type id="ome.model.meta.OriginalFile" named="true" annotated="true">
                <properties>
                        <required name="path" type="String"/>
                        <required name="size" type="Long"/>
                        <optional name="atime" type="timestamp"/>
                        <optional name="mtime" type="timestamp"/>
                        <optional name="ctime" type="timestamp"/>
                        <required name="sha1" type="String"/>
                </properties>
        </type>
        <link id="ome.model.jobs.JobOriginalFileLink">
                <!-- Note: JobOriginalFileLink is not in model-->
                <properties>
                        <from_parent type="ome.model.jobs.Job"/>
                        <to_child type="ome.model.meta.OriginalFile"/>
                </properties>
        </link>
        <type id="ome.model.jobs.Job" abstract="true">
                <!-- Note: Job is not in model-->
                <properties>
                        <required name="username" type="String"/>
                        <required name="groupname" type="String"/>
                        <required name="type" type="String"/>
                        <required name="message" type="String"/>
                        <required name="status" type="ome.model.jobs.JobStatus"/>
                        <required name="submitted" type="timestamp"/>
                        <required name="scheduledFor" type="timestamp"/>
                        <optional name="started" type="timestamp"/>
                        <optional name="finished" type="timestamp"/>
                        <child name="originalFileLinks" type="ome.model.jobs.JobOriginalFileLink" target="ome.model.meta.OriginalFile"/>
                </properties>
        </type>
        <type id="ome.model.jobs.ImportJob" superclass="ome.model.jobs.Job">
                <!-- Note: ImportJob is not in model-->
                <properties>
                        <required name="imageName" type="String"/>
                        <required name="imageDescription" type="String"/>
                </properties>
        </type>
        <type id="ome.model.jobs.ScriptJob" superclass="ome.model.jobs.Job">
                <!-- Note: ScriptJob is not in model-->
                <properties>
                        <optional name="description" type="String"/>
                </properties>
        </type>
    <type id="ome.model.core.Image" named="true" described="true" annotated="true"><!-- TODO: review-->
        <properties>
            <onemany name="pixels" type="ome.model.core.Pixels" inverse="image" ordered="true"/>
        </properties>
    </type>
    <type id="ome.model.core.Pixels" annotated="true">
        <properties>
            <!-- Acquisition Context 1 -->
            <manyone name="image" type="ome.model.core.Image" ordered="true"/>
        </properties>
    </type>
	<!-- examples -->
	<!--
		<type id="listOfExamples"><properties>
		<test_r/><test_1/><test/><required/>
		<test_p/><test_1N/><onemany/>
		<test_q/><test_01/><zeroone/><optional/>
		<test_s/><test_0N/><zeromany/>
		<test_ip/><test_N1/><manyone/>
		<test_is/><test_N0/><manyzero/>
		<fk_p/>
		<fk_r/>
		<int_p/>
		<value_cardinality/>
		</properties></type>
	-->
</types>
