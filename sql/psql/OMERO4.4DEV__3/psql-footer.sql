--
-- Copyright 2006 University of Dundee. All rights reserved.
-- Use is subject to license terms supplied in LICENSE.txt
--

--
-- This file was generated by dsl/resources/ome/dsl/psql-footer.vm
--

--
-- Triggers
--
  CREATE OR REPLACE FUNCTION groupexperimentermap_child_index_move() RETURNS "trigger" AS '
    DECLARE
      duplicate INT8;
    BEGIN

      -- Avoids a query if the new and old values of x are the same.
      IF new.child = old.child AND new.child_index = old.child_index THEN
          RETURN new;
      END IF;

      -- At most, there should be one duplicate
      SELECT id INTO duplicate
        FROM groupexperimentermap
       WHERE child = new.child AND child_index = new.child_index
      OFFSET 0
       LIMIT 1;

      IF duplicate IS NOT NULL THEN
          RAISE NOTICE ''Remapping groupexperimentermap %% via (-1 - oldvalue )'', duplicate;
          UPDATE groupexperimentermap SET child_index = -1 - child_index WHERE id = duplicate;
      END IF;

      RETURN new;
    END;' LANGUAGE plpgsql;

  CREATE TRIGGER groupexperimentermap_child_index_trigger
        BEFORE UPDATE ON groupexperimentermap
        FOR EACH ROW EXECUTE PROCEDURE groupexperimentermap_child_index_move ();

  CREATE OR REPLACE FUNCTION codomainmapcontext_renderingDef_index_move() RETURNS "trigger" AS '
    DECLARE
      duplicate INT8;
    BEGIN

      -- Avoids a query if the new and old values of x are the same.
      IF new.renderingDef = old.renderingDef AND new.renderingDef_index = old.renderingDef_index THEN
          RETURN new;
      END IF;

      -- At most, there should be one duplicate
      SELECT id INTO duplicate
        FROM codomainmapcontext
       WHERE renderingDef = new.renderingDef AND renderingDef_index = new.renderingDef_index
      OFFSET 0
       LIMIT 1;

      IF duplicate IS NOT NULL THEN
          RAISE NOTICE ''Remapping codomainmapcontext %% via (-1 - oldvalue )'', duplicate;
          UPDATE codomainmapcontext SET renderingDef_index = -1 - renderingDef_index WHERE id = duplicate;
      END IF;

      RETURN new;
    END;' LANGUAGE plpgsql;

  CREATE TRIGGER codomainmapcontext_renderingDef_index_trigger
        BEFORE UPDATE ON codomainmapcontext
        FOR EACH ROW EXECUTE PROCEDURE codomainmapcontext_renderingDef_index_move ();

  CREATE OR REPLACE FUNCTION lightpathexcitationfilterlink_parent_index_move() RETURNS "trigger" AS '
    DECLARE
      duplicate INT8;
    BEGIN

      -- Avoids a query if the new and old values of x are the same.
      IF new.parent = old.parent AND new.parent_index = old.parent_index THEN
          RETURN new;
      END IF;

      -- At most, there should be one duplicate
      SELECT id INTO duplicate
        FROM lightpathexcitationfilterlink
       WHERE parent = new.parent AND parent_index = new.parent_index
      OFFSET 0
       LIMIT 1;

      IF duplicate IS NOT NULL THEN
          RAISE NOTICE ''Remapping lightpathexcitationfilterlink %% via (-1 - oldvalue )'', duplicate;
          UPDATE lightpathexcitationfilterlink SET parent_index = -1 - parent_index WHERE id = duplicate;
      END IF;

      RETURN new;
    END;' LANGUAGE plpgsql;

  CREATE TRIGGER lightpathexcitationfilterlink_parent_index_trigger
        BEFORE UPDATE ON lightpathexcitationfilterlink
        FOR EACH ROW EXECUTE PROCEDURE lightpathexcitationfilterlink_parent_index_move ();

  CREATE OR REPLACE FUNCTION channelbinding_renderingDef_index_move() RETURNS "trigger" AS '
    DECLARE
      duplicate INT8;
    BEGIN

      -- Avoids a query if the new and old values of x are the same.
      IF new.renderingDef = old.renderingDef AND new.renderingDef_index = old.renderingDef_index THEN
          RETURN new;
      END IF;

      -- At most, there should be one duplicate
      SELECT id INTO duplicate
        FROM channelbinding
       WHERE renderingDef = new.renderingDef AND renderingDef_index = new.renderingDef_index
      OFFSET 0
       LIMIT 1;

      IF duplicate IS NOT NULL THEN
          RAISE NOTICE ''Remapping channelbinding %% via (-1 - oldvalue )'', duplicate;
          UPDATE channelbinding SET renderingDef_index = -1 - renderingDef_index WHERE id = duplicate;
      END IF;

      RETURN new;
    END;' LANGUAGE plpgsql;

  CREATE TRIGGER channelbinding_renderingDef_index_trigger
        BEFORE UPDATE ON channelbinding
        FOR EACH ROW EXECUTE PROCEDURE channelbinding_renderingDef_index_move ();


--
-- Indexes
--
  CREATE INDEX i_wellsampleannotationlink_owner ON wellsampleannotationlink(owner_id);
  CREATE INDEX i_wellsampleannotationlink_group ON wellsampleannotationlink(group_id);
  CREATE INDEX i_WellSampleAnnotationLink_parent ON wellsampleannotationlink(parent);
  CREATE INDEX i_WellSampleAnnotationLink_child ON wellsampleannotationlink(child);
  CREATE INDEX i_Polyline_markerEnd ON polyline(markerEnd);
  CREATE INDEX i_Polyline_markerStart ON polyline(markerStart);
  CREATE INDEX i_wellannotationlink_owner ON wellannotationlink(owner_id);
  CREATE INDEX i_wellannotationlink_group ON wellannotationlink(group_id);
  CREATE INDEX i_WellAnnotationLink_parent ON wellannotationlink(parent);
  CREATE INDEX i_WellAnnotationLink_child ON wellannotationlink(child);
  CREATE INDEX i_thumbnail_owner ON thumbnail(owner_id);
  CREATE INDEX i_thumbnail_group ON thumbnail(group_id);
  CREATE INDEX i_Thumbnail_pixels ON thumbnail(pixels);
  CREATE INDEX i_imagemicrobeammanipulationlink_owner ON imagemicrobeammanipulationlink(owner_id);
  CREATE INDEX i_imagemicrobeammanipulationlink_group ON imagemicrobeammanipulationlink(group_id);
  CREATE INDEX i_ImageMicrobeamManipulationLink_parent ON imagemicrobeammanipulationlink(parent);
  CREATE INDEX i_ImageMicrobeamManipulationLink_child ON imagemicrobeammanipulationlink(child);
  CREATE INDEX i_lightpath_owner ON lightpath(owner_id);
  CREATE INDEX i_lightpath_group ON lightpath(group_id);
  CREATE INDEX i_LightPath_dichroic ON lightpath(dichroic);
  CREATE INDEX i_objective_owner ON objective(owner_id);
  CREATE INDEX i_objective_group ON objective(group_id);
  CREATE INDEX i_Objective_correction ON objective(correction);
  CREATE INDEX i_Objective_immersion ON objective(immersion);
  CREATE INDEX i_Objective_instrument ON objective(instrument);
  CREATE INDEX i_channel_owner ON channel(owner_id);
  CREATE INDEX i_channel_group ON channel(group_id);
  CREATE INDEX i_Channel_statsInfo ON channel(statsInfo);
  CREATE INDEX i_Channel_acquisitionMode ON channel(acquisitionMode);
  CREATE INDEX i_Channel_color ON channel(color);
  CREATE INDEX i_Channel_contrastMethod ON channel(contrastMethod);
  CREATE INDEX i_Channel_detectorSettings ON channel(detectorSettings);
  CREATE INDEX i_Channel_filterSet ON channel(filterSet);
  CREATE INDEX i_Channel_illuminationType ON channel(illuminationType);
  CREATE INDEX i_Channel_lightPath ON channel(lightPath);
  CREATE INDEX i_Channel_lightSourceSettings ON channel(lightSourceSettings);
  CREATE INDEX i_Channel_pixels ON channel(pixels);
  CREATE INDEX i_reagent_owner ON reagent(owner_id);
  CREATE INDEX i_reagent_group ON reagent(group_id);
  CREATE INDEX i_Reagent_wells ON reagent(wells);
  CREATE INDEX i_Reagent_screens ON reagent(screens);
  CREATE INDEX i_imageannotationlink_owner ON imageannotationlink(owner_id);
  CREATE INDEX i_imageannotationlink_group ON imageannotationlink(group_id);
  CREATE INDEX i_ImageAnnotationLink_parent ON imageannotationlink(parent);
  CREATE INDEX i_ImageAnnotationLink_child ON imageannotationlink(child);
  CREATE INDEX i_stagelabel_owner ON stagelabel(owner_id);
  CREATE INDEX i_stagelabel_group ON stagelabel(group_id);
  CREATE INDEX i_datasetimagelink_owner ON datasetimagelink(owner_id);
  CREATE INDEX i_datasetimagelink_group ON datasetimagelink(group_id);
  CREATE INDEX i_DatasetImageLink_parent ON datasetimagelink(parent);
  CREATE INDEX i_DatasetImageLink_child ON datasetimagelink(child);
  CREATE INDEX i_filtersetemissionfilterlink_owner ON filtersetemissionfilterlink(owner_id);
  CREATE INDEX i_filtersetemissionfilterlink_group ON filtersetemissionfilterlink(group_id);
  CREATE INDEX i_FilterSetEmissionFilterLink_parent ON filtersetemissionfilterlink(parent);
  CREATE INDEX i_FilterSetEmissionFilterLink_child ON filtersetemissionfilterlink(child);
  CREATE INDEX i_originalfileannotationlink_owner ON originalfileannotationlink(owner_id);
  CREATE INDEX i_originalfileannotationlink_group ON originalfileannotationlink(group_id);
  CREATE INDEX i_OriginalFileAnnotationLink_parent ON originalfileannotationlink(parent);
  CREATE INDEX i_OriginalFileAnnotationLink_child ON originalfileannotationlink(child);
  CREATE INDEX i_GroupExperimenterMap_parent ON groupexperimentermap(parent);
  CREATE INDEX i_GroupExperimenterMap_child ON groupexperimentermap(child);
  CREATE INDEX i_dataset_owner ON dataset(owner_id);
  CREATE INDEX i_dataset_group ON dataset(group_id);
  CREATE INDEX i_imagingenvironment_owner ON imagingenvironment(owner_id);
  CREATE INDEX i_imagingenvironment_group ON imagingenvironment(group_id);
  CREATE INDEX i_transmittancerange_owner ON transmittancerange(owner_id);
  CREATE INDEX i_transmittancerange_group ON transmittancerange(group_id);
  CREATE INDEX i_screen_owner ON screen(owner_id);
  CREATE INDEX i_screen_group ON screen(group_id);
  CREATE INDEX i_Arc_type ON arc(type);
  CREATE INDEX i_plate_owner ON plate(owner_id);
  CREATE INDEX i_plate_group ON plate(group_id);
  CREATE INDEX i_Plate_columnNamingConvention ON plate(columnNamingConvention);
  CREATE INDEX i_Plate_rowNamingConvention ON plate(rowNamingConvention);
  CREATE INDEX i_EventLog_event ON eventlog(event);
  CREATE INDEX i_quantumdef_owner ON quantumdef(owner_id);
  CREATE INDEX i_quantumdef_group ON quantumdef(group_id);
  CREATE INDEX i_image_owner ON image(owner_id);
  CREATE INDEX i_image_group ON image(group_id);
  CREATE INDEX i_Image_format ON image(format);
  CREATE INDEX i_Image_experiment ON image(experiment);
  CREATE INDEX i_Image_imagingEnvironment ON image(imagingEnvironment);
  CREATE INDEX i_Image_instrument ON image(instrument);
  CREATE INDEX i_Image_objectiveSettings ON image(objectiveSettings);
  CREATE INDEX i_Image_stageLabel ON image(stageLabel);
  CREATE INDEX i_Image_wellSamples ON image(wellSamples);
  CREATE INDEX i_namespace_owner ON namespace(owner_id);
  CREATE INDEX i_namespace_group ON namespace(group_id);
  CREATE INDEX i_joboriginalfilelink_owner ON joboriginalfilelink(owner_id);
  CREATE INDEX i_joboriginalfilelink_group ON joboriginalfilelink(group_id);
  CREATE INDEX i_JobOriginalFileLink_parent ON joboriginalfilelink(parent);
  CREATE INDEX i_JobOriginalFileLink_child ON joboriginalfilelink(child);
  CREATE INDEX i_renderingdef_owner ON renderingdef(owner_id);
  CREATE INDEX i_renderingdef_group ON renderingdef(group_id);
  CREATE INDEX i_RenderingDef_pixels ON renderingdef(pixels);
  CREATE INDEX i_RenderingDef_model ON renderingdef(model);
  CREATE INDEX i_RenderingDef_quantization ON renderingdef(quantization);
  CREATE INDEX i_codomainmapcontext_owner ON codomainmapcontext(owner_id);
  CREATE INDEX i_codomainmapcontext_group ON codomainmapcontext(group_id);
  CREATE INDEX i_CodomainMapContext_renderingDef ON codomainmapcontext(renderingDef);
  CREATE INDEX i_dichroic_owner ON dichroic(owner_id);
  CREATE INDEX i_dichroic_group ON dichroic(group_id);
  CREATE INDEX i_Dichroic_filterSets ON dichroic(filterSets);
  CREATE INDEX i_Dichroic_lightPaths ON dichroic(lightPaths);
  CREATE INDEX i_Dichroic_instrument ON dichroic(instrument);
  CREATE INDEX i_affinetransform_owner ON affinetransform(owner_id);
  CREATE INDEX i_affinetransform_group ON affinetransform(group_id);
  CREATE INDEX i_objectivesettings_owner ON objectivesettings(owner_id);
  CREATE INDEX i_objectivesettings_group ON objectivesettings(group_id);
  CREATE INDEX i_ObjectiveSettings_objective ON objectivesettings(objective);
  CREATE INDEX i_ObjectiveSettings_medium ON objectivesettings(medium);
  CREATE INDEX i_channelannotationlink_owner ON channelannotationlink(owner_id);
  CREATE INDEX i_channelannotationlink_group ON channelannotationlink(group_id);
  CREATE INDEX i_ChannelAnnotationLink_parent ON channelannotationlink(parent);
  CREATE INDEX i_ChannelAnnotationLink_child ON channelannotationlink(child);
  CREATE INDEX i_projectdatasetlink_owner ON projectdatasetlink(owner_id);
  CREATE INDEX i_projectdatasetlink_group ON projectdatasetlink(group_id);
  CREATE INDEX i_ProjectDatasetLink_parent ON projectdatasetlink(parent);
  CREATE INDEX i_ProjectDatasetLink_child ON projectdatasetlink(child);
  CREATE INDEX i_experimentergroupannotationlink_owner ON experimentergroupannotationlink(owner_id);
  CREATE INDEX i_experimentergroupannotationlink_group ON experimentergroupannotationlink(group_id);
  CREATE INDEX i_ExperimenterGroupAnnotationLink_parent ON experimentergroupannotationlink(parent);
  CREATE INDEX i_ExperimenterGroupAnnotationLink_child ON experimentergroupannotationlink(child);
  CREATE INDEX i_pixels_owner ON pixels(owner_id);
  CREATE INDEX i_pixels_group ON pixels(group_id);
  CREATE INDEX i_Pixels_image ON pixels(image);
  CREATE INDEX i_Pixels_dimensionOrder ON pixels(dimensionOrder);
  CREATE INDEX i_Pixels_type ON pixels(type);
  CREATE INDEX i_lightsource_owner ON lightsource(owner_id);
  CREATE INDEX i_lightsource_group ON lightsource(group_id);
  CREATE INDEX i_LightSource_instrument ON lightsource(instrument);
  CREATE INDEX i_externalinfo_owner ON externalinfo(owner_id);
  CREATE INDEX i_externalinfo_group ON externalinfo(group_id);
  CREATE INDEX i_FileAnnotation_file ON annotation("file");
  CREATE INDEX i_annotationannotationlink_owner ON annotationannotationlink(owner_id);
  CREATE INDEX i_annotationannotationlink_group ON annotationannotationlink(group_id);
  CREATE INDEX i_AnnotationAnnotationLink_parent ON annotationannotationlink(parent);
  CREATE INDEX i_AnnotationAnnotationLink_child ON annotationannotationlink(child);
  CREATE INDEX i_nodeannotationlink_owner ON nodeannotationlink(owner_id);
  CREATE INDEX i_nodeannotationlink_group ON nodeannotationlink(group_id);
  CREATE INDEX i_NodeAnnotationLink_parent ON nodeannotationlink(parent);
  CREATE INDEX i_NodeAnnotationLink_child ON nodeannotationlink(child);
  CREATE INDEX i_roiannotationlink_owner ON roiannotationlink(owner_id);
  CREATE INDEX i_roiannotationlink_group ON roiannotationlink(group_id);
  CREATE INDEX i_ROIAnnotationLink_parent ON roiannotationlink(parent);
  CREATE INDEX i_ROIAnnotationLink_child ON roiannotationlink(child);
  CREATE INDEX i_Share_group ON share("group");
  CREATE INDEX i_namespaceannotationlink_owner ON namespaceannotationlink(owner_id);
  CREATE INDEX i_namespaceannotationlink_group ON namespaceannotationlink(group_id);
  CREATE INDEX i_NamespaceAnnotationLink_parent ON namespaceannotationlink(parent);
  CREATE INDEX i_NamespaceAnnotationLink_child ON namespaceannotationlink(child);
  CREATE INDEX i_lightpathemissionfilterlink_owner ON lightpathemissionfilterlink(owner_id);
  CREATE INDEX i_lightpathemissionfilterlink_group ON lightpathemissionfilterlink(group_id);
  CREATE INDEX i_LightPathEmissionFilterLink_parent ON lightpathemissionfilterlink(parent);
  CREATE INDEX i_LightPathEmissionFilterLink_child ON lightpathemissionfilterlink(child);
  CREATE INDEX i_projectannotationlink_owner ON projectannotationlink(owner_id);
  CREATE INDEX i_projectannotationlink_group ON projectannotationlink(group_id);
  CREATE INDEX i_ProjectAnnotationLink_parent ON projectannotationlink(parent);
  CREATE INDEX i_ProjectAnnotationLink_child ON projectannotationlink(child);
  CREATE INDEX i_detectorsettings_owner ON detectorsettings(owner_id);
  CREATE INDEX i_detectorsettings_group ON detectorsettings(group_id);
  CREATE INDEX i_DetectorSettings_detector ON detectorsettings(detector);
  CREATE INDEX i_DetectorSettings_binning ON detectorsettings(binning);
  CREATE INDEX i_manufacturerspec_owner ON manufacturerspec(owner_id);
  CREATE INDEX i_manufacturerspec_group ON manufacturerspec(group_id);
  CREATE INDEX i_microbeammanipulationroilink_owner ON microbeammanipulationroilink(owner_id);
  CREATE INDEX i_microbeammanipulationroilink_group ON microbeammanipulationroilink(group_id);
  CREATE INDEX i_MicrobeamManipulationROILink_parent ON microbeammanipulationroilink(parent);
  CREATE INDEX i_MicrobeamManipulationROILink_child ON microbeammanipulationroilink(child);
  CREATE INDEX i_lightpathexcitationfilterlink_owner ON lightpathexcitationfilterlink(owner_id);
  CREATE INDEX i_lightpathexcitationfilterlink_group ON lightpathexcitationfilterlink(group_id);
  CREATE INDEX i_LightPathExcitationFilterLink_parent ON lightpathexcitationfilterlink(parent);
  CREATE INDEX i_LightPathExcitationFilterLink_child ON lightpathexcitationfilterlink(child);
  CREATE INDEX i_roi_owner ON roi(owner_id);
  CREATE INDEX i_roi_group ON roi(group_id);
  CREATE INDEX i_ROI_image ON roi(image);
  CREATE INDEX i_Laser_laserMedium ON laser(laserMedium);
  CREATE INDEX i_Laser_pulse ON laser(pulse);
  CREATE INDEX i_Laser_pump ON laser(pump);
  CREATE INDEX i_Laser_type ON laser(type);
  CREATE INDEX i_screenplatelink_owner ON screenplatelink(owner_id);
  CREATE INDEX i_screenplatelink_group ON screenplatelink(group_id);
  CREATE INDEX i_ScreenPlateLink_parent ON screenplatelink(parent);
  CREATE INDEX i_ScreenPlateLink_child ON screenplatelink(child);
  CREATE INDEX i_reagentannotationlink_owner ON reagentannotationlink(owner_id);
  CREATE INDEX i_reagentannotationlink_group ON reagentannotationlink(group_id);
  CREATE INDEX i_ReagentAnnotationLink_parent ON reagentannotationlink(parent);
  CREATE INDEX i_ReagentAnnotationLink_child ON reagentannotationlink(child);
  CREATE INDEX i_instrument_owner ON instrument(owner_id);
  CREATE INDEX i_instrument_group ON instrument(group_id);
  CREATE INDEX i_Instrument_images ON instrument(images);
  CREATE INDEX i_Instrument_microscope ON instrument(microscope);
  CREATE INDEX i_plane_owner ON plane(owner_id);
  CREATE INDEX i_plane_group ON plane(group_id);
  CREATE INDEX i_Plane_pixels ON plane(pixels);
  CREATE INDEX i_Filament_type ON filament(type);
  CREATE INDEX i_statsinfo_owner ON statsinfo(owner_id);
  CREATE INDEX i_statsinfo_group ON statsinfo(group_id);
  CREATE INDEX i_lightsourcesettings_owner ON lightsourcesettings(owner_id);
  CREATE INDEX i_lightsourcesettings_group ON lightsourcesettings(group_id);
  CREATE INDEX i_LightSourceSettings_lightSource ON lightsourcesettings(lightSource);
  CREATE INDEX i_LightSourceSettings_microbeamManipulation ON lightsourcesettings(microbeamManipulation);
  CREATE INDEX i_originalfile_owner ON originalfile(owner_id);
  CREATE INDEX i_originalfile_group ON originalfile(group_id);
  CREATE INDEX i_annotation_owner ON annotation(owner_id);
  CREATE INDEX i_annotation_group ON annotation(group_id);
  CREATE INDEX i_job_owner ON job(owner_id);
  CREATE INDEX i_job_group ON job(group_id);
  CREATE INDEX i_Job_status ON job(status);
  CREATE INDEX i_ShareMember_parent ON sharemember(parent);
  CREATE INDEX i_ShareMember_child ON sharemember(child);
  CREATE INDEX i_plateannotationlink_owner ON plateannotationlink(owner_id);
  CREATE INDEX i_plateannotationlink_group ON plateannotationlink(group_id);
  CREATE INDEX i_PlateAnnotationLink_parent ON plateannotationlink(parent);
  CREATE INDEX i_PlateAnnotationLink_child ON plateannotationlink(child);
  CREATE INDEX i_experimenterannotationlink_owner ON experimenterannotationlink(owner_id);
  CREATE INDEX i_experimenterannotationlink_group ON experimenterannotationlink(group_id);
  CREATE INDEX i_ExperimenterAnnotationLink_parent ON experimenterannotationlink(parent);
  CREATE INDEX i_ExperimenterAnnotationLink_child ON experimenterannotationlink(child);
  CREATE INDEX i_experiment_owner ON experiment(owner_id);
  CREATE INDEX i_experiment_group ON experiment(group_id);
  CREATE INDEX i_Experiment_images ON experiment(images);
  CREATE INDEX i_Experiment_type ON experiment(type);
  CREATE INDEX i_channelbinding_owner ON channelbinding(owner_id);
  CREATE INDEX i_channelbinding_group ON channelbinding(group_id);
  CREATE INDEX i_ChannelBinding_renderingDef ON channelbinding(renderingDef);
  CREATE INDEX i_ChannelBinding_family ON channelbinding(family);
  CREATE INDEX i_filterset_owner ON filterset(owner_id);
  CREATE INDEX i_filterset_group ON filterset(group_id);
  CREATE INDEX i_FilterSet_channels ON filterset(channels);
  CREATE INDEX i_FilterSet_dichroic ON filterset(dichroic);
  CREATE INDEX i_FilterSet_instrument ON filterset(instrument);
  CREATE INDEX i_microscope_owner ON microscope(owner_id);
  CREATE INDEX i_microscope_group ON microscope(group_id);
  CREATE INDEX i_Microscope_type ON microscope(type);
  CREATE INDEX i_microbeammanipulation_owner ON microbeammanipulation(owner_id);
  CREATE INDEX i_microbeammanipulation_group ON microbeammanipulation(group_id);
  CREATE INDEX i_MicrobeamManipulation_type ON microbeammanipulation(type);
  CREATE INDEX i_MicrobeamManipulation_experiment ON microbeammanipulation(experiment);
  CREATE INDEX i_Session_node ON session(node);
  CREATE INDEX i_Session_owner ON session(owner);
  CREATE INDEX i_screenannotationlink_owner ON screenannotationlink(owner_id);
  CREATE INDEX i_screenannotationlink_group ON screenannotationlink(group_id);
  CREATE INDEX i_ScreenAnnotationLink_parent ON screenannotationlink(parent);
  CREATE INDEX i_ScreenAnnotationLink_child ON screenannotationlink(child);
  CREATE INDEX i_pixelsannotationlink_owner ON pixelsannotationlink(owner_id);
  CREATE INDEX i_pixelsannotationlink_group ON pixelsannotationlink(group_id);
  CREATE INDEX i_PixelsAnnotationLink_parent ON pixelsannotationlink(parent);
  CREATE INDEX i_PixelsAnnotationLink_child ON pixelsannotationlink(child);
  CREATE INDEX i_planeannotationlink_owner ON planeannotationlink(owner_id);
  CREATE INDEX i_planeannotationlink_group ON planeannotationlink(group_id);
  CREATE INDEX i_PlaneAnnotationLink_parent ON planeannotationlink(parent);
  CREATE INDEX i_PlaneAnnotationLink_child ON planeannotationlink(child);
  CREATE INDEX i_datasetannotationlink_owner ON datasetannotationlink(owner_id);
  CREATE INDEX i_datasetannotationlink_group ON datasetannotationlink(group_id);
  CREATE INDEX i_DatasetAnnotationLink_parent ON datasetannotationlink(parent);
  CREATE INDEX i_DatasetAnnotationLink_child ON datasetannotationlink(child);
  CREATE INDEX i_plateacquisition_owner ON plateacquisition(owner_id);
  CREATE INDEX i_plateacquisition_group ON plateacquisition(group_id);
  CREATE INDEX i_PlateAcquisition_plate ON plateacquisition(plate);
  CREATE INDEX i_well_owner ON well(owner_id);
  CREATE INDEX i_well_group ON well(group_id);
  CREATE INDEX i_Well_color ON well(color);
  CREATE INDEX i_Well_reagent ON well(reagent);
  CREATE INDEX i_Well_plate ON well(plate);
  CREATE INDEX i_plateacquisitionannotationlink_owner ON plateacquisitionannotationlink(owner_id);
  CREATE INDEX i_plateacquisitionannotationlink_group ON plateacquisitionannotationlink(group_id);
  CREATE INDEX i_PlateAcquisitionAnnotationLink_parent ON plateacquisitionannotationlink(parent);
  CREATE INDEX i_PlateAcquisitionAnnotationLink_child ON plateacquisitionannotationlink(child);
  CREATE INDEX i_detector_owner ON detector(owner_id);
  CREATE INDEX i_detector_group ON detector(group_id);
  CREATE INDEX i_Detector_type ON detector(type);
  CREATE INDEX i_Detector_instrument ON detector(instrument);
  CREATE INDEX i_pixelsoriginalfilemap_owner ON pixelsoriginalfilemap(owner_id);
  CREATE INDEX i_pixelsoriginalfilemap_group ON pixelsoriginalfilemap(group_id);
  CREATE INDEX i_PixelsOriginalFileMap_parent ON pixelsoriginalfilemap(parent);
  CREATE INDEX i_PixelsOriginalFileMap_child ON pixelsoriginalfilemap(child);
  CREATE INDEX i_project_owner ON project(owner_id);
  CREATE INDEX i_project_group ON project(group_id);
  CREATE INDEX i_imageroilink_owner ON imageroilink(owner_id);
  CREATE INDEX i_imageroilink_group ON imageroilink(group_id);
  CREATE INDEX i_ImageROILink_parent ON imageroilink(parent);
  CREATE INDEX i_ImageROILink_child ON imageroilink(child);
  CREATE INDEX i_filter_owner ON filter(owner_id);
  CREATE INDEX i_filter_group ON filter(group_id);
  CREATE INDEX i_Filter_transmittanceRange ON filter(transmittanceRange);
  CREATE INDEX i_Filter_type ON filter(type);
  CREATE INDEX i_Filter_instrument ON filter(instrument);
  CREATE INDEX i_sessionannotationlink_owner ON sessionannotationlink(owner_id);
  CREATE INDEX i_sessionannotationlink_group ON sessionannotationlink(group_id);
  CREATE INDEX i_SessionAnnotationLink_parent ON sessionannotationlink(parent);
  CREATE INDEX i_SessionAnnotationLink_child ON sessionannotationlink(child);
  CREATE INDEX i_Line_markerEnd ON line(markerEnd);
  CREATE INDEX i_Line_markerStart ON line(markerStart);
  CREATE INDEX i_filtersetexcitationfilterlink_owner ON filtersetexcitationfilterlink(owner_id);
  CREATE INDEX i_filtersetexcitationfilterlink_group ON filtersetexcitationfilterlink(group_id);
  CREATE INDEX i_FilterSetExcitationFilterLink_parent ON filtersetexcitationfilterlink(parent);
  CREATE INDEX i_FilterSetExcitationFilterLink_child ON filtersetexcitationfilterlink(child);
  CREATE INDEX i_shape_owner ON shape(owner_id);
  CREATE INDEX i_shape_group ON shape(group_id);
  CREATE INDEX i_Shape_roi ON shape(roi);
  CREATE INDEX i_Shape_fillColor ON shape(fillColor);
  CREATE INDEX i_Shape_fillRule ON shape(fillRule);
  CREATE INDEX i_Shape_fontFamily ON shape(fontFamily);
  CREATE INDEX i_Shape_fontStyle ON shape(fontStyle);
  CREATE INDEX i_Shape_lineCap ON shape(lineCap);
  CREATE INDEX i_Shape_strokeColor ON shape(strokeColor);
  CREATE INDEX i_Shape_transform ON shape(transform);
  CREATE INDEX i_wellsample_owner ON wellsample(owner_id);
  CREATE INDEX i_wellsample_group ON wellsample(group_id);
  CREATE INDEX i_WellSample_image ON wellsample(image);
  CREATE INDEX i_WellSample_plateAcquisitions ON wellsample(plateAcquisitions);
  CREATE INDEX i_WellSample_well ON wellsample(well);
  CREATE INDEX i_Event_experimenter ON event(experimenter);
  CREATE INDEX i_Event_experimenterGroup ON event(experimenterGroup);
  CREATE INDEX i_Event_type ON event(type);
  CREATE INDEX i_Event_containingEvent ON event(containingEvent);
  CREATE INDEX i_Event_session ON event("session");

--
-- Finally, a function for showing our permissions
-- select id, ome_perms(permissions) FROM sometable...
--
CREATE OR REPLACE FUNCTION ome_perms(p INT8) RETURNS VARCHAR AS '
DECLARE
    ur CHAR DEFAULT ''-'';
    uw CHAR DEFAULT ''-'';
    gr CHAR DEFAULT ''-'';
    gw CHAR DEFAULT ''-'';
    wr CHAR DEFAULT ''-'';
    ww CHAR DEFAULT ''-'';
BEGIN
    -- shift 8
    SELECT INTO ur CASE WHEN (cast(p as bit(64)) & cast(1024 as bit(64))) = cast(1024 as bit(64)) THEN ''r'' ELSE ''-'' END;
    SELECT INTO uw CASE WHEN (cast(p as bit(64)) & cast( 512 as bit(64))) = cast( 512 as bit(64)) THEN ''w'' ELSE ''-'' END;
    -- shift 4
    SELECT INTO gr CASE WHEN (cast(p as bit(64)) & cast(  64 as bit(64))) = cast(  64 as bit(64)) THEN ''r'' ELSE ''-'' END;
    SELECT INTO gw CASE WHEN (cast(p as bit(64)) & cast(  32 as bit(64))) = cast(  32 as bit(64)) THEN ''w'' ELSE ''-'' END;
    -- shift 0
    SELECT INTO wr CASE WHEN (cast(p as bit(64)) & cast(   4 as bit(64))) = cast(   4 as bit(64)) THEN ''r'' ELSE ''-'' END;
    SELECT INTO ww CASE WHEN (cast(p as bit(64)) & cast(   2 as bit(64))) = cast(   2 as bit(64)) THEN ''w'' ELSE ''-'' END;

    RETURN ur || uw || gr || gw || wr || ww;
END;' LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION omero_43_check_pg_advisory_lock() RETURNS void AS '
DECLARE
    txt text;
BEGIN
      BEGIN
        PERFORM pg_advisory_lock(1, 1);
        PERFORM pg_advisory_unlock(1, 1);
      EXCEPTION
        WHEN undefined_function THEN
         txt := chr(10) ||
            ''====================================================================================='' || chr(10) ||
            ''pg_advisory_lock does not exist!'' || chr(10) || chr(10) ||
            ''You must upgrade to PostgreSQL 8.2 or above'' || chr(10) ||
            ''====================================================================================='' || chr(10) || chr(10);
         -- 8.1 is unsupported starting with OMERO4.3 (See #4902)
         RAISE EXCEPTION ''%%'', txt;
      END;
END;' LANGUAGE plpgsql;
SELECT omero_43_check_pg_advisory_lock();
DROP FUNCTION omero_43_check_pg_advisory_lock();



set constraints all deferred;

--
-- #1176 : create our own nextval() functionality for more consistent
-- sequence operation in hibernate. This functionality was updated for
-- OMERO 4.2 (#2508) in order to prevent logging during triggers.
--

CREATE OR REPLACE FUNCTION ome_nextval(seq VARCHAR) RETURNS INT8 AS '
BEGIN
      RETURN ome_nextval(seq, 1);
END;' LANGUAGE plpgsql;

-- These renamings allow us to reuse the Hibernate-generated tables
-- for sequence generation. Eventually, a method might be found to
-- make Hibernate generate them for us.
CREATE SEQUENCE _lock_seq;
ALTER TABLE seq_table RENAME TO _lock_ids;
ALTER TABLE _lock_ids RENAME COLUMN sequence_name TO name;
ALTER TABLE _lock_ids DROP CONSTRAINT seq_table_pkey;
ALTER TABLE _lock_ids DROP COLUMN next_val;
ALTER TABLE _lock_ids ADD COLUMN id int PRIMARY KEY DEFAULT nextval('_lock_seq');
CREATE UNIQUE INDEX _lock_ids_name ON _lock_ids (name);

CREATE OR REPLACE FUNCTION ome_nextval(seq VARCHAR, increment int4) RETURNS INT8 AS '
DECLARE
      Lid  int4;
      nv   int8;
BEGIN
      SELECT id INTO Lid FROM _lock_ids WHERE name = seq;
      IF Lid IS NULL THEN
          SELECT INTO Lid nextval(''_lock_seq'');
          INSERT INTO _lock_ids (id, name) VALUES (Lid, seq);
      END IF;

      BEGIN
        PERFORM pg_advisory_lock(1, Lid);
      EXCEPTION
        WHEN undefined_function THEN
          RAISE DEBUG ''No function pg_advisory_lock'';
      END;
      PERFORM nextval(seq) FROM generate_series(1, increment);
      SELECT currval(seq) INTO nv;
      BEGIN
        PERFORM pg_advisory_unlock(1, Lid);
      EXCEPTION
        WHEN undefined_function THEN
          RAISE DEBUG ''No function pg_advisory_unlock'';
      END;

      RETURN nv;

END;' LANGUAGE plpgsql;

CREATE SEQUENCE seq_wellsampleannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_wellsampleannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_wellannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_wellannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_filtertype; INSERT INTO _lock_ids (name, id) SELECT 'seq_filtertype', nextval('_lock_seq');
CREATE SEQUENCE seq_thumbnail; INSERT INTO _lock_ids (name, id) SELECT 'seq_thumbnail', nextval('_lock_seq');
CREATE SEQUENCE seq_imagemicrobeammanipulationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_imagemicrobeammanipulationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_lightpath; INSERT INTO _lock_ids (name, id) SELECT 'seq_lightpath', nextval('_lock_seq');
CREATE SEQUENCE seq_immersion; INSERT INTO _lock_ids (name, id) SELECT 'seq_immersion', nextval('_lock_seq');
CREATE SEQUENCE seq_objective; INSERT INTO _lock_ids (name, id) SELECT 'seq_objective', nextval('_lock_seq');
CREATE SEQUENCE seq_channel; INSERT INTO _lock_ids (name, id) SELECT 'seq_channel', nextval('_lock_seq');
CREATE SEQUENCE seq_reagent; INSERT INTO _lock_ids (name, id) SELECT 'seq_reagent', nextval('_lock_seq');
CREATE SEQUENCE seq_imageannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_imageannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_stagelabel; INSERT INTO _lock_ids (name, id) SELECT 'seq_stagelabel', nextval('_lock_seq');
CREATE SEQUENCE seq_arctype; INSERT INTO _lock_ids (name, id) SELECT 'seq_arctype', nextval('_lock_seq');
CREATE SEQUENCE seq_experimenttype; INSERT INTO _lock_ids (name, id) SELECT 'seq_experimenttype', nextval('_lock_seq');
CREATE SEQUENCE seq_datasetimagelink; INSERT INTO _lock_ids (name, id) SELECT 'seq_datasetimagelink', nextval('_lock_seq');
CREATE SEQUENCE seq_filtersetemissionfilterlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_filtersetemissionfilterlink', nextval('_lock_seq');
CREATE SEQUENCE seq_originalfileannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_originalfileannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_groupexperimentermap; INSERT INTO _lock_ids (name, id) SELECT 'seq_groupexperimentermap', nextval('_lock_seq');
CREATE SEQUENCE seq_dataset; INSERT INTO _lock_ids (name, id) SELECT 'seq_dataset', nextval('_lock_seq');
CREATE SEQUENCE seq_imagingenvironment; INSERT INTO _lock_ids (name, id) SELECT 'seq_imagingenvironment', nextval('_lock_seq');
CREATE SEQUENCE seq_transmittancerange; INSERT INTO _lock_ids (name, id) SELECT 'seq_transmittancerange', nextval('_lock_seq');
CREATE SEQUENCE seq_screen; INSERT INTO _lock_ids (name, id) SELECT 'seq_screen', nextval('_lock_seq');
CREATE SEQUENCE seq_plate; INSERT INTO _lock_ids (name, id) SELECT 'seq_plate', nextval('_lock_seq');
CREATE SEQUENCE seq_eventlog; INSERT INTO _lock_ids (name, id) SELECT 'seq_eventlog', nextval('_lock_seq');
CREATE SEQUENCE seq_quantumdef; INSERT INTO _lock_ids (name, id) SELECT 'seq_quantumdef', nextval('_lock_seq');
CREATE SEQUENCE seq_renderingmodel; INSERT INTO _lock_ids (name, id) SELECT 'seq_renderingmodel', nextval('_lock_seq');
CREATE SEQUENCE seq_image; INSERT INTO _lock_ids (name, id) SELECT 'seq_image', nextval('_lock_seq');
CREATE SEQUENCE seq_namespace; INSERT INTO _lock_ids (name, id) SELECT 'seq_namespace', nextval('_lock_seq');
CREATE SEQUENCE seq_joboriginalfilelink; INSERT INTO _lock_ids (name, id) SELECT 'seq_joboriginalfilelink', nextval('_lock_seq');
CREATE SEQUENCE seq_experimentergroup; INSERT INTO _lock_ids (name, id) SELECT 'seq_experimentergroup', nextval('_lock_seq');
CREATE SEQUENCE seq_renderingdef; INSERT INTO _lock_ids (name, id) SELECT 'seq_renderingdef', nextval('_lock_seq');
CREATE SEQUENCE seq_fillrule; INSERT INTO _lock_ids (name, id) SELECT 'seq_fillrule', nextval('_lock_seq');
CREATE SEQUENCE seq_codomainmapcontext; INSERT INTO _lock_ids (name, id) SELECT 'seq_codomainmapcontext', nextval('_lock_seq');
CREATE SEQUENCE seq_dichroic; INSERT INTO _lock_ids (name, id) SELECT 'seq_dichroic', nextval('_lock_seq');
CREATE SEQUENCE seq_affinetransform; INSERT INTO _lock_ids (name, id) SELECT 'seq_affinetransform', nextval('_lock_seq');
CREATE SEQUENCE seq_eventtype; INSERT INTO _lock_ids (name, id) SELECT 'seq_eventtype', nextval('_lock_seq');
CREATE SEQUENCE seq_objectivesettings; INSERT INTO _lock_ids (name, id) SELECT 'seq_objectivesettings', nextval('_lock_seq');
CREATE SEQUENCE seq_microscopetype; INSERT INTO _lock_ids (name, id) SELECT 'seq_microscopetype', nextval('_lock_seq');
CREATE SEQUENCE seq_channelannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_channelannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_filamenttype; INSERT INTO _lock_ids (name, id) SELECT 'seq_filamenttype', nextval('_lock_seq');
CREATE SEQUENCE seq_projectdatasetlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_projectdatasetlink', nextval('_lock_seq');
CREATE SEQUENCE seq_experimentergroupannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_experimentergroupannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_pixels; INSERT INTO _lock_ids (name, id) SELECT 'seq_pixels', nextval('_lock_seq');
CREATE SEQUENCE seq_namingconvention; INSERT INTO _lock_ids (name, id) SELECT 'seq_namingconvention', nextval('_lock_seq');
CREATE SEQUENCE seq_lightsource; INSERT INTO _lock_ids (name, id) SELECT 'seq_lightsource', nextval('_lock_seq');
CREATE SEQUENCE seq_externalinfo; INSERT INTO _lock_ids (name, id) SELECT 'seq_externalinfo', nextval('_lock_seq');
CREATE SEQUENCE seq_annotationannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_annotationannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_illuminationtype; INSERT INTO _lock_ids (name, id) SELECT 'seq_illuminationtype', nextval('_lock_seq');
CREATE SEQUENCE seq_lasertype; INSERT INTO _lock_ids (name, id) SELECT 'seq_lasertype', nextval('_lock_seq');
CREATE SEQUENCE seq_nodeannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_nodeannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_roiannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_roiannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_dimensionorder; INSERT INTO _lock_ids (name, id) SELECT 'seq_dimensionorder', nextval('_lock_seq');
CREATE SEQUENCE seq_binning; INSERT INTO _lock_ids (name, id) SELECT 'seq_binning', nextval('_lock_seq');
CREATE SEQUENCE seq_namespaceannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_namespaceannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_fontfamily; INSERT INTO _lock_ids (name, id) SELECT 'seq_fontfamily', nextval('_lock_seq');
CREATE SEQUENCE seq_lightpathemissionfilterlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_lightpathemissionfilterlink', nextval('_lock_seq');
CREATE SEQUENCE seq_family; INSERT INTO _lock_ids (name, id) SELECT 'seq_family', nextval('_lock_seq');
CREATE SEQUENCE seq_projectannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_projectannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_detectorsettings; INSERT INTO _lock_ids (name, id) SELECT 'seq_detectorsettings', nextval('_lock_seq');
CREATE SEQUENCE seq_detectortype; INSERT INTO _lock_ids (name, id) SELECT 'seq_detectortype', nextval('_lock_seq');
CREATE SEQUENCE seq_manufacturerspec; INSERT INTO _lock_ids (name, id) SELECT 'seq_manufacturerspec', nextval('_lock_seq');
CREATE SEQUENCE seq_microbeammanipulationroilink; INSERT INTO _lock_ids (name, id) SELECT 'seq_microbeammanipulationroilink', nextval('_lock_seq');
CREATE SEQUENCE seq_lightpathexcitationfilterlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_lightpathexcitationfilterlink', nextval('_lock_seq');
CREATE SEQUENCE seq_roi; INSERT INTO _lock_ids (name, id) SELECT 'seq_roi', nextval('_lock_seq');
CREATE SEQUENCE seq_pulse; INSERT INTO _lock_ids (name, id) SELECT 'seq_pulse', nextval('_lock_seq');
CREATE SEQUENCE seq_screenplatelink; INSERT INTO _lock_ids (name, id) SELECT 'seq_screenplatelink', nextval('_lock_seq');
CREATE SEQUENCE seq_reagentannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_reagentannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_instrument; INSERT INTO _lock_ids (name, id) SELECT 'seq_instrument', nextval('_lock_seq');
CREATE SEQUENCE seq_plane; INSERT INTO _lock_ids (name, id) SELECT 'seq_plane', nextval('_lock_seq');
CREATE SEQUENCE seq_statsinfo; INSERT INTO _lock_ids (name, id) SELECT 'seq_statsinfo', nextval('_lock_seq');
CREATE SEQUENCE seq_lightsourcesettings; INSERT INTO _lock_ids (name, id) SELECT 'seq_lightsourcesettings', nextval('_lock_seq');
CREATE SEQUENCE seq_originalfile; INSERT INTO _lock_ids (name, id) SELECT 'seq_originalfile', nextval('_lock_seq');
CREATE SEQUENCE seq_annotation; INSERT INTO _lock_ids (name, id) SELECT 'seq_annotation', nextval('_lock_seq');
CREATE SEQUENCE seq_job; INSERT INTO _lock_ids (name, id) SELECT 'seq_job', nextval('_lock_seq');
CREATE SEQUENCE seq_sharemember; INSERT INTO _lock_ids (name, id) SELECT 'seq_sharemember', nextval('_lock_seq');
CREATE SEQUENCE seq_dbpatch; INSERT INTO _lock_ids (name, id) SELECT 'seq_dbpatch', nextval('_lock_seq');
CREATE SEQUENCE seq_plateannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_plateannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_experimenterannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_experimenterannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_experiment; INSERT INTO _lock_ids (name, id) SELECT 'seq_experiment', nextval('_lock_seq');
CREATE SEQUENCE seq_channelbinding; INSERT INTO _lock_ids (name, id) SELECT 'seq_channelbinding', nextval('_lock_seq');
CREATE SEQUENCE seq_microbeammanipulationtype; INSERT INTO _lock_ids (name, id) SELECT 'seq_microbeammanipulationtype', nextval('_lock_seq');
CREATE SEQUENCE seq_medium; INSERT INTO _lock_ids (name, id) SELECT 'seq_medium', nextval('_lock_seq');
CREATE SEQUENCE seq_lasermedium; INSERT INTO _lock_ids (name, id) SELECT 'seq_lasermedium', nextval('_lock_seq');
CREATE SEQUENCE seq_filterset; INSERT INTO _lock_ids (name, id) SELECT 'seq_filterset', nextval('_lock_seq');
CREATE SEQUENCE seq_microscope; INSERT INTO _lock_ids (name, id) SELECT 'seq_microscope', nextval('_lock_seq');
CREATE SEQUENCE seq_microbeammanipulation; INSERT INTO _lock_ids (name, id) SELECT 'seq_microbeammanipulation', nextval('_lock_seq');
CREATE SEQUENCE seq_session; INSERT INTO _lock_ids (name, id) SELECT 'seq_session', nextval('_lock_seq');
CREATE SEQUENCE seq_screenannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_screenannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_format; INSERT INTO _lock_ids (name, id) SELECT 'seq_format', nextval('_lock_seq');
CREATE SEQUENCE seq_marker; INSERT INTO _lock_ids (name, id) SELECT 'seq_marker', nextval('_lock_seq');
CREATE SEQUENCE seq_node; INSERT INTO _lock_ids (name, id) SELECT 'seq_node', nextval('_lock_seq');
CREATE SEQUENCE seq_pixelsannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_pixelsannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_planeannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_planeannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_datasetannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_datasetannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_correction; INSERT INTO _lock_ids (name, id) SELECT 'seq_correction', nextval('_lock_seq');
CREATE SEQUENCE seq_plateacquisition; INSERT INTO _lock_ids (name, id) SELECT 'seq_plateacquisition', nextval('_lock_seq');
CREATE SEQUENCE seq_well; INSERT INTO _lock_ids (name, id) SELECT 'seq_well', nextval('_lock_seq');
CREATE SEQUENCE seq_pixeltype; INSERT INTO _lock_ids (name, id) SELECT 'seq_pixeltype', nextval('_lock_seq');
CREATE SEQUENCE seq_plateacquisitionannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_plateacquisitionannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_detector; INSERT INTO _lock_ids (name, id) SELECT 'seq_detector', nextval('_lock_seq');
CREATE SEQUENCE seq_pixelsoriginalfilemap; INSERT INTO _lock_ids (name, id) SELECT 'seq_pixelsoriginalfilemap', nextval('_lock_seq');
CREATE SEQUENCE seq_project; INSERT INTO _lock_ids (name, id) SELECT 'seq_project', nextval('_lock_seq');
CREATE SEQUENCE seq_imageroilink; INSERT INTO _lock_ids (name, id) SELECT 'seq_imageroilink', nextval('_lock_seq');
CREATE SEQUENCE seq_filter; INSERT INTO _lock_ids (name, id) SELECT 'seq_filter', nextval('_lock_seq');
CREATE SEQUENCE seq_sessionannotationlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_sessionannotationlink', nextval('_lock_seq');
CREATE SEQUENCE seq_linecap; INSERT INTO _lock_ids (name, id) SELECT 'seq_linecap', nextval('_lock_seq');
CREATE SEQUENCE seq_filtersetexcitationfilterlink; INSERT INTO _lock_ids (name, id) SELECT 'seq_filtersetexcitationfilterlink', nextval('_lock_seq');
CREATE SEQUENCE seq_shape; INSERT INTO _lock_ids (name, id) SELECT 'seq_shape', nextval('_lock_seq');
CREATE SEQUENCE seq_fontstyle; INSERT INTO _lock_ids (name, id) SELECT 'seq_fontstyle', nextval('_lock_seq');
CREATE SEQUENCE seq_wellsample; INSERT INTO _lock_ids (name, id) SELECT 'seq_wellsample', nextval('_lock_seq');
CREATE SEQUENCE seq_experimenter; INSERT INTO _lock_ids (name, id) SELECT 'seq_experimenter', nextval('_lock_seq');
CREATE SEQUENCE seq_acquisitionmode; INSERT INTO _lock_ids (name, id) SELECT 'seq_acquisitionmode', nextval('_lock_seq');
CREATE SEQUENCE seq_event; INSERT INTO _lock_ids (name, id) SELECT 'seq_event', nextval('_lock_seq');
CREATE SEQUENCE seq_jobstatus; INSERT INTO _lock_ids (name, id) SELECT 'seq_jobstatus', nextval('_lock_seq');
CREATE SEQUENCE seq_contrastmethod; INSERT INTO _lock_ids (name, id) SELECT 'seq_contrastmethod', nextval('_lock_seq');


--
-- END #1176/#2508
--


--
-- #1390 : Triggering the addition of an "REINDEX" event on annotation events.
--

CREATE OR REPLACE FUNCTION _prepare_session(_event_id int8, _user_id int8, _group_id int8) RETURNS void
    AS '
    BEGIN

        IF NOT EXISTS(SELECT table_name FROM information_schema.tables where table_name = ''_current_session'') THEN
            CREATE TEMP TABLE _current_session ("event_id" int8, "user_id" int8, "group_id" int8) ON COMMIT DELETE ROWS;
            INSERT INTO _current_session VALUES (_event_id, _user_id, _group_id);
        ELSE
            DELETE FROM _current_session;
            INSERT INTO _current_session VALUES (_event_id, _user_id, _group_id);
        END IF;
    END;'
LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION _current_event() RETURNS int8
    AS '
    DECLARE
        eid int8;
    BEGIN
        IF NOT EXISTS(SELECT table_name FROM information_schema.tables where table_name = ''_current_session'') THEN
            RETURN 0;
        END IF;
        SELECT INTO eid event_id FROM _current_session;
        RETURN eid;

    END;'
LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION _current_or_new_event() RETURNS int8
    AS '
    DECLARE
        eid int8;
    BEGIN
        SELECT INTO eid _current_event();
        IF eid = 0 OR eid IS NULL THEN
            SELECT INTO eid ome_nextval(''seq_event'');
            INSERT INTO event (id, permissions, status, time, experimenter, experimentergroup, session, type)
                SELECT eid, -35, ''TRIGGERED'', now(), 0, 0, 0, 0;
        END IF;
        RETURN eid;
    END;'
LANGUAGE plpgsql;


CREATE OR REPLACE FUNCTION annotation_update_event_trigger() RETURNS "trigger"
    AS '
    DECLARE
        rec RECORD;
        eid int8;
        cnt int8;
    BEGIN

        IF NOT EXISTS(SELECT table_name FROM information_schema.tables where table_name = ''_updated_annotations'') THEN
            CREATE TEMP TABLE _updated_annotations (entitytype varchar, entityid int8) ON COMMIT DELETE ROWS;
        END IF;


        FOR rec IN SELECT id, parent FROM channelannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.core.Channel'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM reagentannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.spw.Reagent'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM datasetannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.core.Dataset'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM screenannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.spw.Screen'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM plateannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.spw.Plate'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM imageannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.core.Image'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM namespaceannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.meta.Namespace'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM experimentergroupannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.meta.ExperimenterGroup'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM pixelsannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.core.Pixels'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM roiannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.roi.ROI'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM planeannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.core.Plane'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM originalfileannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.core.OriginalFile'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM annotationannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.annotations.Annotation'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM sessionannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.meta.Session'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM nodeannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.meta.Node'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM plateacquisitionannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.spw.PlateAcquisition'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM wellannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.spw.Well'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM projectannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.core.Project'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM wellsampleannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.spw.WellSample'');
        END LOOP;

        FOR rec IN SELECT id, parent FROM experimenterannotationlink WHERE child = new.id LOOP
            INSERT INTO _updated_annotations (entityid, entitytype) values (rec.parent, ''ome.model.meta.Experimenter'');
        END LOOP;

        SELECT INTO cnt count(*) FROM _updated_annotations;
        IF cnt <> 0 THEN
            SELECT INTO eid _current_or_new_event();
            INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
                 SELECT ome_nextval(''seq_eventlog''), ''REINDEX'', -35, entityid, entitytype, eid
                   FROM _updated_annotations;
        END IF;

        RETURN new;

    END;'
LANGUAGE plpgsql;

CREATE TRIGGER annotation_trigger
        AFTER UPDATE ON annotation
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_update_event_trigger();


CREATE OR REPLACE FUNCTION annotation_link_event_trigger() RETURNS "trigger"
    AS '
    DECLARE
        eid int8;
    BEGIN

        SELECT INTO eid _current_or_new_event();
        INSERT INTO eventlog (id, action, permissions, entityid, entitytype, event)
                SELECT ome_nextval(''seq_eventlog''), ''REINDEX'', -35, new.parent, TG_ARGV[0], eid;

        RETURN new;

    END;'
LANGUAGE plpgsql;

CREATE TRIGGER channel_annotation_link_event_trigger
        AFTER UPDATE ON channelannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.core.Channel');
CREATE TRIGGER reagent_annotation_link_event_trigger
        AFTER UPDATE ON reagentannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.spw.Reagent');
CREATE TRIGGER dataset_annotation_link_event_trigger
        AFTER UPDATE ON datasetannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.core.Dataset');
CREATE TRIGGER screen_annotation_link_event_trigger
        AFTER UPDATE ON screenannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.spw.Screen');
CREATE TRIGGER plate_annotation_link_event_trigger
        AFTER UPDATE ON plateannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.spw.Plate');
CREATE TRIGGER image_annotation_link_event_trigger
        AFTER UPDATE ON imageannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.core.Image');
CREATE TRIGGER namespace_annotation_link_event_trigger
        AFTER UPDATE ON namespaceannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.meta.Namespace');
CREATE TRIGGER experimentergroup_annotation_link_event_trigger
        AFTER UPDATE ON experimentergroupannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.meta.ExperimenterGroup');
CREATE TRIGGER pixels_annotation_link_event_trigger
        AFTER UPDATE ON pixelsannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.core.Pixels');
CREATE TRIGGER roi_annotation_link_event_trigger
        AFTER UPDATE ON roiannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.roi.ROI');
CREATE TRIGGER plane_annotation_link_event_trigger
        AFTER UPDATE ON planeannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.core.Plane');
CREATE TRIGGER originalfile_annotation_link_event_trigger
        AFTER UPDATE ON originalfileannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.core.OriginalFile');
CREATE TRIGGER annotation_annotation_link_event_trigger
        AFTER UPDATE ON annotationannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.annotations.Annotation');
CREATE TRIGGER session_annotation_link_event_trigger
        AFTER UPDATE ON sessionannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.meta.Session');
CREATE TRIGGER node_annotation_link_event_trigger
        AFTER UPDATE ON nodeannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.meta.Node');
CREATE TRIGGER plateacquisition_annotation_link_event_trigger
        AFTER UPDATE ON plateacquisitionannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.spw.PlateAcquisition');
CREATE TRIGGER well_annotation_link_event_trigger
        AFTER UPDATE ON wellannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.spw.Well');
CREATE TRIGGER project_annotation_link_event_trigger
        AFTER UPDATE ON projectannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.core.Project');
CREATE TRIGGER wellsample_annotation_link_event_trigger
        AFTER UPDATE ON wellsampleannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.spw.WellSample');
CREATE TRIGGER experimenter_annotation_link_event_trigger
        AFTER UPDATE ON experimenterannotationlink
        FOR EACH ROW
        EXECUTE PROCEDURE annotation_link_event_trigger('ome.model.meta.Experimenter');


--
-- END #1390
--




-- First, we install a unique constraint so that it is only possible
-- to go from versionA/patchA to versionB/patchB once.
--
alter table dbpatch add constraint unique_dbpatch unique (currentVersion, currentPatch, previousVersion, previousPatch);

--
-- Since this is a table that we will be using in DB-specific ways, we're also going
-- to make working with it a bit simpler.
--
alter table dbpatch alter id set default ome_nextval('seq_dbpatch');
alter table dbpatch alter permissions set default -35;
alter table dbpatch alter message set default 'Updating';

--
-- Then, we insert into the patch table the patch (initialization) which we are currently
-- running so that if anything goes wrong, we'll have some record.
--
insert into dbpatch (currentVersion, currentPatch, previousVersion, previousPatch, message)
             values ('OMERO4.4DEV',  3,    'OMERO4.4DEV',   3,             'Initializing');

--
-- Here we will create the root account and the necessary groups
--
insert into experimenter (id,permissions,version,omename,firstname,lastname)
        values (0,0,0,'root','root','root');
insert into experimenter (id,permissions,version,omename,firstname,lastname)
        values (ome_nextval('seq_experimenter'),0,0,'guest','Guest','Account');
insert into node
        (id,permissions,uuid,conn,up,down)
        select 0,-35,'000000000000000000000000000000000000','unknown',now(),now();
insert into session
        (id,permissions,timetoidle,timetolive,started,closed,defaulteventtype,uuid,owner,node)
        select 0,-35,0,0,now(),now(),'BOOTSTRAP',0000, 0,0;
insert into session
        (id,permissions,timetoidle,timetolive,started,closed,defaulteventtype,uuid,owner,node)
        select ome_nextval('seq_session'),-35, 0,0,now(),now(),'PREVIOUSITEMS','1111',0,0;
insert into event (id,permissions,time,status,experimenter,session) values (0,0,now(),'BOOTSTRAP',0,0);

--
-- Default group permissions (ticket:1783)
-- * "system" is private, so that administrators do not share by accident
-- * "user" is public by default since its purpose is to share objects (ticket:1794)
-- * "guest" is private by default so that it doesn't show up on any lists,
--    though nothing should be created there.
--
insert into experimentergroup (id,permissions,version,name)
        values (0,-103,0,'system');
insert into experimentergroup (id,permissions,version,name)
        values (ome_nextval('seq_experimentergroup'),-35,0,'user');
insert into experimentergroup (id,permissions,version,name)
        values (ome_nextval('seq_experimentergroup'),-103,0,'guest');

insert into eventtype (id,permissions,value) values
        (0,-35,'Bootstrap');
insert into groupexperimentermap
        (id,permissions,version, parent, child, child_index,owner)
        values
        (0,-35,0,0,0,0,true);
insert into groupexperimentermap
        (id,permissions,version, parent, child, child_index,owner)
        select ome_nextval('seq_groupexperimentermap'),-35,0,1,0,1,false;
insert into groupexperimentermap
        (id,permissions,version, parent, child, child_index,owner)
        select ome_nextval('seq_groupexperimentermap'),-35,0,2,1,0,false;

update event set type = 0;
update event set experimentergroup = 0;

alter table event alter column type set not null;
alter table event alter column experimentergroup set not null;


insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-35,'Dichroic';
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-35,'LongPass';
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-35,'ShortPass';
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-35,'BandPass';
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-35,'MultiPass';
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-35,'NeutralDensity';
insert into filtertype (id,permissions,value)
    select ome_nextval('seq_filtertype'),-35,'Other';
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-35,'Oil';
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-35,'Water';
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-35,'WaterDipping';
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-35,'Air';
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-35,'Multi';
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-35,'Glycerol';
insert into immersion (id,permissions,value)
    select ome_nextval('seq_immersion'),-35,'Other';
insert into arctype (id,permissions,value)
    select ome_nextval('seq_arctype'),-35,'Hg';
insert into arctype (id,permissions,value)
    select ome_nextval('seq_arctype'),-35,'Xe';
insert into arctype (id,permissions,value)
    select ome_nextval('seq_arctype'),-35,'HgXe';
insert into arctype (id,permissions,value)
    select ome_nextval('seq_arctype'),-35,'Other';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'FP';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'FRET';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'TimeLapse';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'FourDPlus';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'Screen';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'Immunocytochemistry';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'Immunofluorescence';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'FISH';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'Electrophysiology';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'IonImaging';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'Colocalization';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'PGIDocumentation';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'FluorescenceLifetime';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'SpectralImaging';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'Photobleaching';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'SPIM';
insert into experimenttype (id,permissions,value)
    select ome_nextval('seq_experimenttype'),-35,'Other';
insert into renderingmodel (id,permissions,value)
    select ome_nextval('seq_renderingmodel'),-35,'rgb';
insert into renderingmodel (id,permissions,value)
    select ome_nextval('seq_renderingmodel'),-35,'greyscale';
insert into fillrule (id,permissions,value)
    select ome_nextval('seq_fillrule'),-35,'EvenOdd';
insert into fillrule (id,permissions,value)
    select ome_nextval('seq_fillrule'),-35,'NonZero';
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-35,'Import';
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-35,'Internal';
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-35,'Shoola';
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-35,'User';
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-35,'Task';
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-35,'Test';
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-35,'Processing';
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-35,'FullText';
insert into eventtype (id,permissions,value)
    select ome_nextval('seq_eventtype'),-35,'Sessions';
insert into microscopetype (id,permissions,value)
    select ome_nextval('seq_microscopetype'),-35,'Upright';
insert into microscopetype (id,permissions,value)
    select ome_nextval('seq_microscopetype'),-35,'Inverted';
insert into microscopetype (id,permissions,value)
    select ome_nextval('seq_microscopetype'),-35,'Dissection';
insert into microscopetype (id,permissions,value)
    select ome_nextval('seq_microscopetype'),-35,'Electrophysiology';
insert into microscopetype (id,permissions,value)
    select ome_nextval('seq_microscopetype'),-35,'Other';
insert into filamenttype (id,permissions,value)
    select ome_nextval('seq_filamenttype'),-35,'Incandescent';
insert into filamenttype (id,permissions,value)
    select ome_nextval('seq_filamenttype'),-35,'Halogen';
insert into filamenttype (id,permissions,value)
    select ome_nextval('seq_filamenttype'),-35,'Other';
insert into namingconvention (id,permissions,value)
    select ome_nextval('seq_namingconvention'),-35,'letter';
insert into namingconvention (id,permissions,value)
    select ome_nextval('seq_namingconvention'),-35,'number';
insert into illuminationtype (id,permissions,value)
    select ome_nextval('seq_illuminationtype'),-35,'Transmitted';
insert into illuminationtype (id,permissions,value)
    select ome_nextval('seq_illuminationtype'),-35,'Epifluorescence';
insert into illuminationtype (id,permissions,value)
    select ome_nextval('seq_illuminationtype'),-35,'Oblique';
insert into illuminationtype (id,permissions,value)
    select ome_nextval('seq_illuminationtype'),-35,'NonLinear';
insert into illuminationtype (id,permissions,value)
    select ome_nextval('seq_illuminationtype'),-35,'Other';
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-35,'Excimer';
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-35,'Gas';
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-35,'MetalVapor';
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-35,'SolidState';
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-35,'Dye';
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-35,'Semiconductor';
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-35,'FreeElectron';
insert into lasertype (id,permissions,value)
    select ome_nextval('seq_lasertype'),-35,'Other';
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-35,'XYZCT';
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-35,'XYZTC';
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-35,'XYCTZ';
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-35,'XYCZT';
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-35,'XYTCZ';
insert into dimensionorder (id,permissions,value)
    select ome_nextval('seq_dimensionorder'),-35,'XYTZC';
insert into binning (id,permissions,value)
    select ome_nextval('seq_binning'),-35,'1x1';
insert into binning (id,permissions,value)
    select ome_nextval('seq_binning'),-35,'2x2';
insert into binning (id,permissions,value)
    select ome_nextval('seq_binning'),-35,'4x4';
insert into binning (id,permissions,value)
    select ome_nextval('seq_binning'),-35,'8x8';
insert into binning (id,permissions,value)
    select ome_nextval('seq_binning'),-35,'Other';
insert into fontfamily (id,permissions,value)
    select ome_nextval('seq_fontfamily'),-35,'serif';
insert into fontfamily (id,permissions,value)
    select ome_nextval('seq_fontfamily'),-35,'sans-serif';
insert into fontfamily (id,permissions,value)
    select ome_nextval('seq_fontfamily'),-35,'cursive';
insert into fontfamily (id,permissions,value)
    select ome_nextval('seq_fontfamily'),-35,'fantasy';
insert into fontfamily (id,permissions,value)
    select ome_nextval('seq_fontfamily'),-35,'monospace';
insert into family (id,permissions,value)
    select ome_nextval('seq_family'),-35,'linear';
insert into family (id,permissions,value)
    select ome_nextval('seq_family'),-35,'polynomial';
insert into family (id,permissions,value)
    select ome_nextval('seq_family'),-35,'exponential';
insert into family (id,permissions,value)
    select ome_nextval('seq_family'),-35,'logarithmic';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'CCD';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'IntensifiedCCD';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'AnalogVideo';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'PMT';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'Photodiode';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'Spectroscopy';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'LifetimeImaging';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'CorrelationSpectroscopy';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'FTIR';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'EMCCD';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'APD';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'CMOS';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'EBCCD';
insert into detectortype (id,permissions,value)
    select ome_nextval('seq_detectortype'),-35,'Other';
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-35,'CW';
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-35,'Single';
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-35,'QSwitched';
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-35,'Repetitive';
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-35,'ModeLocked';
insert into pulse (id,permissions,value)
    select ome_nextval('seq_pulse'),-35,'Other';
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-35,'FRAP';
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-35,'FLIP';
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-35,'InverseFRAP';
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-35,'Photoablation';
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-35,'Photoactivation';
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-35,'Uncaging';
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-35,'OpticalTrapping';
insert into microbeammanipulationtype (id,permissions,value)
    select ome_nextval('seq_microbeammanipulationtype'),-35,'Other';
insert into medium (id,permissions,value)
    select ome_nextval('seq_medium'),-35,'Air';
insert into medium (id,permissions,value)
    select ome_nextval('seq_medium'),-35,'Oil';
insert into medium (id,permissions,value)
    select ome_nextval('seq_medium'),-35,'Water';
insert into medium (id,permissions,value)
    select ome_nextval('seq_medium'),-35,'Glycerol';
insert into medium (id,permissions,value)
    select ome_nextval('seq_medium'),-35,'Other';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'Cu';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'Ag';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'ArFl';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'ArCl';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'KrFl';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'KrCl';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'XeFl';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'XeCl';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'XeBr';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'N';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'Ar';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'Kr';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'Xe';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'HeNe';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'HeCd';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'CO';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'CO2';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'H2O';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'HFl';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'NdGlass';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'NdYAG';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'ErGlass';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'ErYAG';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'HoYLF';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'HoYAG';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'Ruby';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'TiSapphire';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'Alexandrite';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'Rhodamine6G';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'CoumarinC30';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'GaAs';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'GaAlAs';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'EMinus';
insert into lasermedium (id,permissions,value)
    select ome_nextval('seq_lasermedium'),-35,'Other';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'PNG';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/PNG';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'JPEG';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/JPEG';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'PGM';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/PGM';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Fits';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Fits';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'GIF';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/GIF';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'BMP';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/BMP';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Dicom';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Dicom';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'BioRad';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/BioRad';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'IPLab';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/IPLab';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Deltavision';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Deltavision';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'MRC';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/MRC';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Gatan';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Gatan';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Imaris';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Imaris';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'OpenlabRaw';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/OpenlabRaw';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'OMEXML';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/OMEXML';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'LIF';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/LIF';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'AVI';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/AVI';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'QT';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/QT';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Pict';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Pict';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'SDT';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/SDT';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'EPS';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/EPS';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Slidebook';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Slidebook';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Alicona';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Alicona';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'MNG';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/MNG';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'NRRD';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/NRRD';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Khoros';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Khoros';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Visitech';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Visitech';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'LIM';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/LIM';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'PSD';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/PSD';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'InCell';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/InCell';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'ICS';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/ICS';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'PerkinElmer';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/PerkinElmer';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'TCS';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/TCS';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'FV1000';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/FV1000';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'ZeissZVI';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/ZeissZVI';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'IPW';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/IPW';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'LegacyND2';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/LegacyND2';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'ND2';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/ND2';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'PCI';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/PCI';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'ImarisHDF';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/ImarisHDF';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Metamorph';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Metamorph';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'ZeissLSM';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/ZeissLSM';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'SEQ';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/SEQ';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Gel';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Gel';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'ImarisTiff';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/ImarisTiff';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Flex';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Flex';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'SVS';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/SVS';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Leica';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Leica';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Nikon';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Nikon';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Fluoview';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Fluoview';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Prairie';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Prairie';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Micromanager';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Micromanager';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'ImprovisionTiff';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/ImprovisionTiff';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'OMETiff';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/OMETiff';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'MetamorphTiff';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/MetamorphTiff';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Tiff';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Tiff';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Openlab';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/Openlab';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'MIAS';
insert into format (id,permissions,value)
    select ome_nextval('seq_format'),-35,'Companion/MIAS';
insert into marker (id,permissions,value)
    select ome_nextval('seq_marker'),-35,'Arrow';
insert into marker (id,permissions,value)
    select ome_nextval('seq_marker'),-35,'Circle';
insert into marker (id,permissions,value)
    select ome_nextval('seq_marker'),-35,'Square';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'UV';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'PlanApo';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'PlanFluor';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'SuperFluor';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'VioletCorrected';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'Achro';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'Achromat';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'Fluor';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'Fl';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'Fluar';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'Neofluar';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'Fluotar';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'Apo';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'PlanNeofluar';
insert into correction (id,permissions,value)
    select ome_nextval('seq_correction'),-35,'Other';
insert into pixeltype (id,permissions,value)
    select ome_nextval('seq_pixeltype'),-35,'int8';
insert into pixeltype (id,permissions,value)
    select ome_nextval('seq_pixeltype'),-35,'int16';
insert into pixeltype (id,permissions,value)
    select ome_nextval('seq_pixeltype'),-35,'int32';
insert into pixeltype (id,permissions,value)
    select ome_nextval('seq_pixeltype'),-35,'uint8';
insert into pixeltype (id,permissions,value)
    select ome_nextval('seq_pixeltype'),-35,'uint16';
insert into pixeltype (id,permissions,value)
    select ome_nextval('seq_pixeltype'),-35,'uint32';
insert into pixeltype (id,permissions,value)
    select ome_nextval('seq_pixeltype'),-35,'float';
insert into pixeltype (id,permissions,value)
    select ome_nextval('seq_pixeltype'),-35,'bit';
insert into pixeltype (id,permissions,value)
    select ome_nextval('seq_pixeltype'),-35,'double';
insert into pixeltype (id,permissions,value)
    select ome_nextval('seq_pixeltype'),-35,'complex';
insert into pixeltype (id,permissions,value)
    select ome_nextval('seq_pixeltype'),-35,'double-complex';
insert into linecap (id,permissions,value)
    select ome_nextval('seq_linecap'),-35,'Butt';
insert into linecap (id,permissions,value)
    select ome_nextval('seq_linecap'),-35,'Line';
insert into linecap (id,permissions,value)
    select ome_nextval('seq_linecap'),-35,'Square';
insert into fontstyle (id,permissions,value)
    select ome_nextval('seq_fontstyle'),-35,'Bold';
insert into fontstyle (id,permissions,value)
    select ome_nextval('seq_fontstyle'),-35,'BoldItalic';
insert into fontstyle (id,permissions,value)
    select ome_nextval('seq_fontstyle'),-35,'Italic';
insert into fontstyle (id,permissions,value)
    select ome_nextval('seq_fontstyle'),-35,'Normal';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'WideField';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'LaserScanningConfocalMicroscopy';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'SpinningDiskConfocal';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'SlitScanConfocal';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'MultiPhotonMicroscopy';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'StructuredIllumination';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'SingleMoleculeImaging';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'TotalInternalReflection';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'FluorescenceLifetime';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'SpectralImaging';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'FluorescenceCorrelationSpectroscopy';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'NearFieldScanningOpticalMicroscopy';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'SecondHarmonicGenerationImaging';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'PALM';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'STORM';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'STED';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'TIRF';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'FSM';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'LCM';
insert into acquisitionmode (id,permissions,value)
    select ome_nextval('seq_acquisitionmode'),-35,'Other';
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-35,'Submitted';
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-35,'Resubmitted';
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-35,'Queued';
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-35,'Requeued';
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-35,'Running';
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-35,'Error';
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-35,'Waiting';
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-35,'Finished';
insert into jobstatus (id,permissions,value)
    select ome_nextval('seq_jobstatus'),-35,'Cancelled';
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-35,'Brightfield';
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-35,'Phase';
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-35,'DIC';
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-35,'HoffmanModulation';
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-35,'ObliqueIllumination';
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-35,'PolarizedLight';
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-35,'Darkfield';
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-35,'Fluorescence';
insert into contrastmethod (id,permissions,value)
    select ome_nextval('seq_contrastmethod'),-35,'Other';

-- Adding bit depth, etc. to pixelstype (#2724)

update pixeltype set (bitsize, issigned, isfloat) = (  1, false, false) where value = 'bit';
update pixeltype set (bitsize, issigned, isfloat) = (  8,  true, false) where value = 'int8';
update pixeltype set (bitsize, issigned, isfloat) = (  8, false, false) where value = 'uint8';
update pixeltype set (bitsize, issigned, isfloat) = ( 16,  true, false) where value = 'int16';
update pixeltype set (bitsize, issigned, isfloat) = ( 16, false, false) where value = 'uint16';
update pixeltype set (bitsize, issigned, isfloat) = ( 32,  true, false) where value = 'int32';
update pixeltype set (bitsize, issigned, isfloat) = ( 32,  true, false) where value = 'uint16';
update pixeltype set (bitsize, issigned, isfloat) = ( 32, false, false) where value = 'uint32';
update pixeltype set (bitsize, issigned, isfloat) = ( 32,  true,  true) where value = 'float';
update pixeltype set (bitsize, issigned, isfloat) = ( 64,  true,  true) where value = 'double';
update pixeltype set (bitsize, issigned, isfloat) = ( 64,  true,  true) where value = 'complex';
update pixeltype set (bitsize, issigned, isfloat) = (128,  true,  true) where value = 'double-complex';

alter table pixeltype alter column bitsize set not null;
alter table pixeltype alter column isfloat set not null;
alter table pixeltype alter column issigned set not null;

--
-- Cryptographic functions for specifying UUID
--

create or replace function uuid() returns character(36)
as '
    select substring(x.my_rand from 1 for 8)||''-''||
           substring(x.my_rand from 9 for 4)||''-4''||
           substring(x.my_rand from 13 for 3)||''-''||x.clock_1||
           substring(x.my_rand from 16 for 3)||''-''||
           substring(x.my_rand from 19 for 12)
from
(select md5(now()::text||random()) as my_rand, to_hex(8+(3*random())::int) as clock_1) as x;'
language sql;

--
-- Configuration table including a UUID uniquely identifying this database.
--
create table configuration ( name varchar(255) primary key, value text );
insert into configuration values ('omero.db.uuid',uuid());

--
-- ticket:2201 - creating repository data structures
--
alter  table pixels add column path text;
alter  table pixels add column name text;
alter  table pixels add column repo varchar(36);
alter  table pixels add column params text[2][];
create index pixels_repo_index on pixels (repo);
-- No unique index on (path, repo, name) since it depends on params

alter  table originalfile alter column mimetype set default 'application/octet-stream';
alter  table originalfile add column repo varchar(36);
alter  table originalfile add column params text[2][];
create index originalfile_mime_index on originalfile (mimetype);
create index originalfile_repo_index on originalfile (repo);
create unique index originalfile_repo_path_index on originalfile (repo, path, name) where repo is not null;

--
-- end ticket:2201
--

-- Indices. See #1640, #2573, etc.
create unique index namespace_name on namespace (name);
create unique index well_col_row on well (plate, "column", "row");
create index eventlog_entitytype on eventlog(entitytype);
create index eventlog_entityid on eventlog(entityid);
create index eventlog_action on eventlog(action);

create table password ( experimenter_id bigint primary key REFERENCES experimenter (id), hash char(24), dn text );
insert into password values (0,'@ROOTPASS@');
insert into password values (1,'');
-- root can now login with omero.rootpass property value
-- and guest can login with any value

-- Here we have finished initializing this database.
update dbpatch set message = 'Database ready.', finished = now()
  where currentVersion = 'OMERO4.4DEV' and
        currentPatch = 3 and
        previousVersion = 'OMERO4.4DEV' and
        previousPatch = 3;

COMMIT;

